"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const http_1 = require("./http");
var httpStatus;
(function (httpStatus) {
    httpStatus[httpStatus["no_token"] = 403] = "no_token";
    httpStatus[httpStatus["out_time"] = 401] = "out_time";
    httpStatus[httpStatus["success"] = 200] = "success";
})(httpStatus = exports.httpStatus || (exports.httpStatus = {}));
var user_roleId;
(function (user_roleId) {
    user_roleId[user_roleId["shop"] = 10001] = "shop";
    user_roleId[user_roleId["client"] = 10002] = "client";
    user_roleId[user_roleId["tourist"] = 10003] = "tourist";
    user_roleId[user_roleId["adminstar"] = 10004] = "adminstar";
    user_roleId[user_roleId["staff"] = 10005] = "staff";
    user_roleId[user_roleId["apply_shop"] = 10006] = "apply_shop";
})(user_roleId = exports.user_roleId || (exports.user_roleId = {}));
const use_token = true;
exports.api = {
  user:{
    login: (data) => http_1.http({ url: '/qylogin', data }),
    getEmployList: (data) => http_1.http({ url: '/server/select', method: 'GET', use_token }),
    getVipApply: (data) => http_1.http({ url: '/applyhandle',method: 'GET', use_token }),
    delEmploy: (data) => http_1.http({ url: '/server/delete',method: 'GET',data,use_token }),
    getThisEmploy: (data) => http_1.http({ url: '/server/selectbyname', method: 'GET', data, use_token }),
    passApply: (data) => http_1.http({ url: '/applyhandle/allow', method: 'GET', data, use_token }),
    refuseApply: (data) => http_1.http({ url: '/applyhandle/refuse', method: 'GET', data, use_token }),
    groupPerson: (data) => http_1.http({ url: '/server/select', data }),
    provideUserInfo: (data) => http_1.http({ url: '/qylogin/serviceinfo', data, use_token }),
    getSearchChat: (data) => http_1.http({ url: '/api/message/selectMsgByUserIdOrContent', method: 'GET', data, use_token }),
    upDateEmploy: (data) => http_1.http({ url: '/server/updaterole', method: 'GET', data, use_token }),
    updateusernote: (data1, data2) => http_1.http({ url: '/server/updateusernote/' + data1 + '/'+ data2, method: 'PUT', use_token }),
},
  groupPerson:{
    getGroupPersonInformation: (data1,data2) => http_1.http({ url: '/pdGroupMember/groupId/'+data1+'/userId/'+data2, method: 'GET', use_token }),
    getGroupPerson: (data1, data) => http_1.http({ url: '/pdGroupMembers/groupId/'+data1, data,method: 'GET', use_token }),
    getMoreGroupPerson: (data) => http_1.http({ url: '/pdGroupMembers/user/groupId/'+data+'/all', method: 'GET', data, use_token }),
    getAllService: (data) => http_1.http({ url: '/pdGroupMembers/service/groupId/' + data , method: 'GET', data, use_token }), 
    deleteGroupPerson: (data) => http_1.http({ url: '/pdGroupMember/delete', method: 'DELETE', data, use_token }),
    searchGroupPerson: (data1, data) => http_1.http({ url: '/pdGroupMember/groupId/' + data1 + '/name' , data, method: 'GET',  use_token }),
    getServiceInformation: (data) => http_1.http({ url: '/server/service' ,method: 'GET',data, use_token }),
    updateGroupNotice: (data) => http_1.http({ url: '/pdGroupChat', method: 'PUT', data, use_token }),
    seeGroupNotice: (data) => http_1.http({ url: '/pdGroupChat/'+data, method: 'get',  use_token }),
    getGroupCode: (data) => http_1.http({ url: '/applet/qrcode', method: 'GET', data, use_token, type: 'arraybuffer' }),
    getRecords: (data1, data2, data) => http_1.http({ url: '/api/message/selectGroupMsg/' + data1 + '/' + data2, data, method: 'GET', use_token }),
    isRead: (data) => http_1.http({ url: '/api/message/isRead', data, method: 'PUT', use_token }),
    searchByName: (data) => http_1.http({ url: '/pdGroupMember/search_by_name', data, method: 'GET', use_token }),
    selectMemebrByName: (data) => http_1.http({ url: '/pdGroupMembers/user/groupId/all', data, method: 'GET', use_token }),
    recoverGroupPerson: (data) => http_1.http({ url: '/pdGroupMember/update/notBlock', data, method: 'PUT', use_token })
},
  records:{
    searchUrlMsg: (data) => http_1.http({ url: '/api/message/searchUrlMsg', data, method: 'GET', use_token }),
    searchMemberMsg: (data) => http_1.http({ url: '/api/message/searchMemberMsg', data, method: 'GET', use_token }),
    searchImageMsg: (data) => http_1.http({ url: '/api/message/searchImageMsg', data, method: 'GET', use_token }),
    selectMsgById: (data) => http_1.http({ url: '/api/message/selectMsgById', data, method: 'GET', use_token })
  }
};
//# sourceMappingURL=data:application/json;base64,